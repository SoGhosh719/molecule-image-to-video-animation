# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uzI6uVp8fhfQQPGuNx2Y-fUepgv7oW0d
"""

# Commented out IPython magic to ensure Python compatibility.

import os
import streamlit as st
from moviepy.video.io.ImageSequenceClip import ImageSequenceClip
from tempfile import mkdtemp

# Function to save uploaded images
def save_uploaded_files(uploaded_files):
    folder_path = mkdtemp()
    for uploaded_file in uploaded_files:
        file_path = os.path.join(folder_path, uploaded_file.name)
        with open(file_path, "wb") as f:
            f.write(uploaded_file.read())
    return folder_path

# Function to create video using MoviePy
def create_video_from_images(folder_path, output_path="output_video.mp4", fps=12):
    images = sorted(
        [os.path.join(folder_path, img) for img in os.listdir(folder_path) if img.endswith((".png", ".jpg", ".jpeg"))]
    )

    if not images:
        st.error("No valid images found.")
        return None

    clip = ImageSequenceClip(images, fps=fps)
    clip.write_videofile(output_path, codec="libx264")

    return output_path

# Streamlit UI
st.title("üé• Molecule Image to Video Converter (MoviePy)")
uploaded_files = st.file_uploader("üìÇ Upload Images", accept_multiple_files=True, type=["png", "jpg", "jpeg"])

if st.button("üé¨ Create Video"):
    if uploaded_files:
        st.info("Processing images...")
        folder_path = save_uploaded_files(uploaded_files)
        video_path = create_video_from_images(folder_path)

        if video_path:
            st.success("‚úÖ Video Created Successfully!")
            with open(video_path, "rb") as f:
                st.download_button("‚¨áÔ∏è Download Video", f, file_name="molecule_animation.mp4", mime="video/mp4")
    else:
        st.warning("‚ö†Ô∏è Please upload images first.")
